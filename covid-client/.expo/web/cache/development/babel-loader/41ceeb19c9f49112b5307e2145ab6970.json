{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\environnement_travail\\\\env_cours\\\\MyWork\\\\EXPOSE_1_ANGLAIS_TECHNIQUE(APP)\\\\Projet-Anglais\\\\covid-client\\\\src\\\\components\\\\Dashboard\\\\DashboardHeader.js\";\n\nimport React, { useState } from 'react';\nimport { Title, Button } from 'react-native-paper';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nvar dataHeaderFrance = [{\n  icon: \"thumbs-up\",\n  title: \"Confirmed\",\n  text: 950000,\n  backColor: \"deepskyblue\"\n}, {\n  icon: \"book-dead\",\n  title: \"Death\",\n  text: 950000,\n  backColor: \"red\"\n}, {\n  icon: \"heartbeat\",\n  title: \"Healing\",\n  text: 950000,\n  backColor: \"green\"\n}];\nvar dataHeaderMondial = [{\n  icon: \"thumbs-up\",\n  title: \"Confirmed\",\n  text: 150000,\n  backColor: \"deepskyblue\"\n}, {\n  icon: \"book-dead\",\n  title: \"Death\",\n  text: 150000,\n  backColor: \"red\"\n}, {\n  icon: \"heartbeat\",\n  title: \"Healing\",\n  text: 150000,\n  backColor: \"green\"\n}];\n\nvar DashboardHeaderView = function DashboardHeaderView(_ref) {\n  var dataHeader = _ref.dataHeader;\n  return dataHeader.map(function (data) {\n    return React.createElement(View, {\n      key: data.title,\n      style: {\n        backgroundColor: data.backColor\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: styleDashboardHeader.dashboardHeaderViewBloc,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, React.createElement(Icon, {\n      style: styleDashboardHeader.dashboardHeaderViewBlocIcon,\n      name: data.icon,\n      size: 100,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }\n    }), React.createElement(View, {\n      style: styleDashboardHeader.dashboardViewBlockAlign,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    }, React.createElement(Title, {\n      style: styleDashboardHeader.dashboardHeaderViewBlocTitle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }\n    }, data.title), React.createElement(Text, {\n      style: styleDashboardHeader.dashboardHeaderViewBlocText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }\n    }, data.text))));\n  });\n};\n\nexport default function DashboardHeader() {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      dataBool = _useState2[0],\n      setDataBool = _useState2[1];\n\n  var _useState3 = useState({\n    bg1: \"blue\",\n    bg2: \"grey\"\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      bgColor = _useState4[0],\n      setBgColor = _useState4[1];\n\n  return React.createElement(View, {\n    style: styleDashboardHeader.dashboardHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, React.createElement(Title, {\n    style: styleDashboardHeader.dashboardHeaderTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, \"Statistique\"), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      width: \"100%\",\n      justifyContent: \"space-evenly\",\n      marginBottom: 20,\n      marginTop: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, React.createElement(Button, {\n    style: {\n      backgroundColor: dataBool === true ? bgColor.bg1 : bgColor.bg2\n    },\n    mode: \"contained\",\n    onPress: function onPress() {\n      return setDataBool(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }, \"Cas - France\"), React.createElement(Button, {\n    style: {\n      backgroundColor: dataBool === true ? bgColor.bg2 : bgColor.bg1\n    },\n    mode: \"contained\",\n    onPress: function onPress() {\n      return setDataBool(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, \"Cas mondiaux\")), React.createElement(View, {\n    style: styleDashboardHeader.dashboardHeaderView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, React.createElement(DashboardHeaderView, {\n    dataHeader: dataBool === true ? dataHeaderFrance : dataHeaderMondial,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }))));\n}\nvar styleDashboardHeader = StyleSheet.create({\n  dashboardHeader: {\n    width: \"100%\"\n  },\n  dashboardHeaderTitle: {\n    fontSize: 40,\n    paddingTop: 10,\n    textAlign: \"center\",\n    textDecorationLine: \"underline\"\n  },\n  dashboardHeaderView: {\n    width: \"100%\",\n    flexDirection: \"column\"\n  },\n  dashboardHeaderViewBloc: {\n    width: \"100%\",\n    height: 110,\n    flexDirection: \"row\",\n    marginBottom: 5,\n    justifyContent: \"space-between\"\n  },\n  dashboardHeaderViewBlocIcon: {\n    paddingTop: 5,\n    paddingLeft: 20\n  },\n  dashboardViewBlockAlign: {\n    paddingRight: 20,\n    alignItems: \"flex-end\",\n    textAlign: \"right\"\n  },\n  dashboardHeaderViewBlocTitle: {\n    paddingTop: 30,\n    fontSize: 45\n  },\n  dashboardHeaderViewBlocText: {\n    fontSize: 30\n  }\n});","map":{"version":3,"sources":["C:/environnement_travail/env_cours/MyWork/EXPOSE_1_ANGLAIS_TECHNIQUE(APP)/Projet-Anglais/covid-client/src/components/Dashboard/DashboardHeader.js"],"names":["React","useState","Title","Button","Icon","dataHeaderFrance","icon","title","text","backColor","dataHeaderMondial","DashboardHeaderView","dataHeader","map","data","backgroundColor","styleDashboardHeader","dashboardHeaderViewBloc","dashboardHeaderViewBlocIcon","dashboardViewBlockAlign","dashboardHeaderViewBlocTitle","dashboardHeaderViewBlocText","DashboardHeader","dataBool","setDataBool","bg1","bg2","bgColor","setBgColor","dashboardHeader","dashboardHeaderTitle","flexDirection","width","justifyContent","marginBottom","marginTop","dashboardHeaderView","StyleSheet","create","fontSize","paddingTop","textAlign","textDecorationLine","height","paddingLeft","paddingRight","alignItems"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,oBAA9B;;;;AAEA,OAAOC,IAAP;AAEA,IAAMC,gBAAgB,GAAG,CACrB;AACIC,EAAAA,IAAI,EAAE,WADV;AAEIC,EAAAA,KAAK,EAAE,WAFX;AAGIC,EAAAA,IAAI,EAAE,MAHV;AAIIC,EAAAA,SAAS,EAAE;AAJf,CADqB,EAOrB;AACIH,EAAAA,IAAI,EAAE,WADV;AAEIC,EAAAA,KAAK,EAAE,OAFX;AAGIC,EAAAA,IAAI,EAAE,MAHV;AAIIC,EAAAA,SAAS,EAAE;AAJf,CAPqB,EAarB;AACIH,EAAAA,IAAI,EAAE,WADV;AAEIC,EAAAA,KAAK,EAAE,SAFX;AAGIC,EAAAA,IAAI,EAAE,MAHV;AAIIC,EAAAA,SAAS,EAAE;AAJf,CAbqB,CAAzB;AAqBA,IAAMC,iBAAiB,GAAG,CACtB;AACIJ,EAAAA,IAAI,EAAE,WADV;AAEIC,EAAAA,KAAK,EAAE,WAFX;AAGIC,EAAAA,IAAI,EAAE,MAHV;AAIIC,EAAAA,SAAS,EAAE;AAJf,CADsB,EAOtB;AACIH,EAAAA,IAAI,EAAE,WADV;AAEIC,EAAAA,KAAK,EAAE,OAFX;AAGIC,EAAAA,IAAI,EAAE,MAHV;AAIIC,EAAAA,SAAS,EAAE;AAJf,CAPsB,EAatB;AACIH,EAAAA,IAAI,EAAE,WADV;AAEIC,EAAAA,KAAK,EAAE,SAFX;AAGIC,EAAAA,IAAI,EAAE,MAHV;AAIIC,EAAAA,SAAS,EAAE;AAJf,CAbsB,CAA1B;;AAqBA,IAAME,mBAAmB,GAAG,SAAtBA,mBAAsB,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;AAC5C,SACIA,UAAU,CAACC,GAAX,CAAgB,UAACC,IAAD;AAAA,WACZ,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,IAAI,CAACP,KAAhB;AAAuB,MAAA,KAAK,EAAE;AAACQ,QAAAA,eAAe,EAAED,IAAI,CAACL;AAAvB,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEO,oBAAoB,CAACC,uBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAED,oBAAoB,CAACE,2BAAlC;AAA+D,MAAA,IAAI,EAAEJ,IAAI,CAACR,IAA1E;AAAgF,MAAA,IAAI,EAAE,GAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEU,oBAAoB,CAACG,uBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAEH,oBAAoB,CAACI,4BAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkEN,IAAI,CAACP,KAAvE,CADJ,EAEI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAES,oBAAoB,CAACK,2BAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgEP,IAAI,CAACN,IAArE,CAFJ,CAFJ,CADJ,CADY;AAAA,GAAhB,CADJ;AAaH,CAdD;;AAgBA,eAAe,SAASc,eAAT,GAA2B;AAAA,kBACNrB,QAAQ,CAAC,IAAD,CADF;AAAA;AAAA,MAC/BsB,QAD+B;AAAA,MACrBC,WADqB;;AAAA,mBAERvB,QAAQ,CAAC;AACnCwB,IAAAA,GAAG,EAAE,MAD8B;AAEnCC,IAAAA,GAAG,EAAE;AAF8B,GAAD,CAFA;AAAA;AAAA,MAE/BC,OAF+B;AAAA,MAEtBC,UAFsB;;AAOtC,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEZ,oBAAoB,CAACa,eAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEb,oBAAoB,CAACc,oBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACC,MAAAA,aAAa,EAAE,KAAhB;AAAuBC,MAAAA,KAAK,EAAE,MAA9B;AAAsCC,MAAAA,cAAc,EAAE,cAAtD;AAAsEC,MAAAA,YAAY,EAAE,EAApF;AAAwFC,MAAAA,SAAS,EAAE;AAAnG,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE;AAACpB,MAAAA,eAAe,EAAEQ,QAAQ,KAAK,IAAb,GAAoBI,OAAO,CAACF,GAA5B,GAAkCE,OAAO,CAACD;AAA5D,KAAf;AAAiF,IAAA,IAAI,EAAC,WAAtF;AAAkG,IAAA,OAAO,EAAG;AAAA,aAAMF,WAAW,CAAC,IAAD,CAAjB;AAAA,KAA5G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE;AAACT,MAAAA,eAAe,EAAEQ,QAAQ,KAAK,IAAb,GAAoBI,OAAO,CAACD,GAA5B,GAAkCC,OAAO,CAACF;AAA5D,KAAf;AAAiF,IAAA,IAAI,EAAC,WAAtF;AAAkG,IAAA,OAAO,EAAG;AAAA,aAAMD,WAAW,CAAC,KAAD,CAAjB;AAAA,KAA5G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,CADJ,EAKI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAER,oBAAoB,CAACoB,mBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,mBAAD;AAAqB,IAAA,UAAU,EAAEb,QAAQ,KAAK,IAAb,GAAoBlB,gBAApB,GAAuCK,iBAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CALJ,CAFJ,CADJ;AAcH;AAED,IAAMM,oBAAoB,GAAGqB,UAAU,CAACC,MAAX,CAAmB;AAC5CT,EAAAA,eAAe,EAAE;AACbG,IAAAA,KAAK,EAAE;AADM,GAD2B;AAI5CF,EAAAA,oBAAoB,EAAE;AAClBS,IAAAA,QAAQ,EAAE,EADQ;AAElBC,IAAAA,UAAU,EAAE,EAFM;AAGlBC,IAAAA,SAAS,EAAE,QAHO;AAIlBC,IAAAA,kBAAkB,EAAE;AAJF,GAJsB;AAU5CN,EAAAA,mBAAmB,EAAE;AACjBJ,IAAAA,KAAK,EAAE,MADU;AAEjBD,IAAAA,aAAa,EAAE;AAFE,GAVuB;AAc5Cd,EAAAA,uBAAuB,EAAE;AACrBe,IAAAA,KAAK,EAAE,MADc;AAErBW,IAAAA,MAAM,EAAE,GAFa;AAGrBZ,IAAAA,aAAa,EAAE,KAHM;AAIrBG,IAAAA,YAAY,EAAE,CAJO;AAKrBD,IAAAA,cAAc,EAAE;AALK,GAdmB;AAqB5Cf,EAAAA,2BAA2B,EAAE;AACzBsB,IAAAA,UAAU,EAAE,CADa;AAEzBI,IAAAA,WAAW,EAAC;AAFa,GArBe;AAyB5CzB,EAAAA,uBAAuB,EAAE;AACrB0B,IAAAA,YAAY,EAAE,EADO;AAErBC,IAAAA,UAAU,EAAE,UAFS;AAGrBL,IAAAA,SAAS,EAAE;AAHU,GAzBmB;AA8B5CrB,EAAAA,4BAA4B,EAAE;AAC1BoB,IAAAA,UAAU,EAAE,EADc;AAE1BD,IAAAA,QAAQ,EAAE;AAFgB,GA9Bc;AAmC5ClB,EAAAA,2BAA2B,EAAE;AACzBkB,IAAAA,QAAQ,EAAE;AADe;AAnCe,CAAnB,CAA7B","sourcesContent":["import React, { useState } from 'react'\r\nimport { Title, Button } from 'react-native-paper'\r\nimport { View, Text, StyleSheet } from 'react-native'\r\nimport Icon from 'react-native-vector-icons/FontAwesome'\r\n\r\nconst dataHeaderFrance = [\r\n    {\r\n        icon: \"thumbs-up\",\r\n        title: \"Confirmed\",\r\n        text: 950000,\r\n        backColor: \"deepskyblue\"\r\n    },\r\n    {\r\n        icon: \"book-dead\",\r\n        title: \"Death\",\r\n        text: 950000,\r\n        backColor: \"red\"\r\n    },\r\n    {\r\n        icon: \"heartbeat\",\r\n        title: \"Healing\",\r\n        text: 950000,\r\n        backColor: \"green\"\r\n    },\r\n]\r\n\r\nconst dataHeaderMondial = [\r\n    {\r\n        icon: \"thumbs-up\",\r\n        title: \"Confirmed\",\r\n        text: 150000,\r\n        backColor: \"deepskyblue\"\r\n    },\r\n    {\r\n        icon: \"book-dead\",\r\n        title: \"Death\",\r\n        text: 150000,\r\n        backColor: \"red\"\r\n    },\r\n    {\r\n        icon: \"heartbeat\",\r\n        title: \"Healing\",\r\n        text: 150000,\r\n        backColor: \"green\"\r\n    },\r\n]\r\n\r\nconst DashboardHeaderView = ({ dataHeader }) => {\r\n    return (\r\n        dataHeader.map( (data) => (\r\n            <View key={data.title} style={{backgroundColor: data.backColor}}>\r\n                <View style={styleDashboardHeader.dashboardHeaderViewBloc}>\r\n                    <Icon style={styleDashboardHeader.dashboardHeaderViewBlocIcon} name={data.icon} size={100} />\r\n                    <View style={styleDashboardHeader.dashboardViewBlockAlign}>\r\n                        <Title style={styleDashboardHeader.dashboardHeaderViewBlocTitle}>{data.title}</Title>\r\n                        <Text style={styleDashboardHeader.dashboardHeaderViewBlocText}>{data.text}</Text>\r\n                    </View>\r\n                </View>\r\n            </View>\r\n        ))\r\n    )\r\n}\r\n\r\nexport default function DashboardHeader() {\r\n    const [dataBool, setDataBool] = useState(true)\r\n    const [bgColor, setBgColor] = useState({\r\n        bg1: \"blue\", \r\n        bg2: \"grey\"\r\n    })\r\n\r\n    return (\r\n        <View style={styleDashboardHeader.dashboardHeader}>\r\n            <Title style={styleDashboardHeader.dashboardHeaderTitle}>Statistique</Title>\r\n            <View>\r\n                <View style={{flexDirection: \"row\", width: \"100%\", justifyContent: \"space-evenly\", marginBottom: 20, marginTop: 20}}>\r\n                    <Button style={{backgroundColor: dataBool === true ? bgColor.bg1 : bgColor.bg2}} mode=\"contained\" onPress={ () => setDataBool(true)}>Cas - France</Button>\r\n                    <Button style={{backgroundColor: dataBool === true ? bgColor.bg2 : bgColor.bg1}} mode=\"contained\" onPress={ () => setDataBool(false)}>Cas mondiaux</Button>\r\n                </View>\r\n                <View style={styleDashboardHeader.dashboardHeaderView}>\r\n                    <DashboardHeaderView dataHeader={dataBool === true ? dataHeaderFrance : dataHeaderMondial} />\r\n                </View>\r\n            </View>\r\n        </View>\r\n    )\r\n}\r\n \r\nconst styleDashboardHeader = StyleSheet.create( {\r\n    dashboardHeader: {\r\n        width: \"100%\",\r\n    },\r\n    dashboardHeaderTitle: {\r\n        fontSize: 40,\r\n        paddingTop: 10,\r\n        textAlign: \"center\",\r\n        textDecorationLine: \"underline\"\r\n    },\r\n    dashboardHeaderView: {\r\n        width: \"100%\",\r\n        flexDirection: \"column\",\r\n    },\r\n    dashboardHeaderViewBloc: {\r\n        width: \"100%\",\r\n        height: 110,\r\n        flexDirection: \"row\",\r\n        marginBottom: 5,\r\n        justifyContent: \"space-between\",\r\n    },\r\n    dashboardHeaderViewBlocIcon: {\r\n        paddingTop: 5,\r\n        paddingLeft:20\r\n    },\r\n    dashboardViewBlockAlign: {\r\n        paddingRight: 20,\r\n        alignItems: \"flex-end\",\r\n        textAlign: \"right\"\r\n    },\r\n    dashboardHeaderViewBlocTitle: {\r\n        paddingTop: 30,\r\n        fontSize: 45,\r\n\r\n    },\r\n    dashboardHeaderViewBlocText: {\r\n        fontSize: 30,\r\n    }\r\n})"]},"metadata":{},"sourceType":"module"}