{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\environnement_travail\\\\env_cours\\\\MyWork\\\\EXPOSE_1_ANGLAIS_TECHNIQUE(APP)\\\\Projet-Anglais\\\\covid-client\\\\src\\\\themes\\\\themeContainer.js\";\n\nimport React, { createContext, useState, useEffect } from 'react';\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { ThemeProvider } from 'styled-components/native';\nimport { Appearance, AppearanceProvider } from 'react-native-appearance';\nimport lightTheme from \"./light\";\nimport darkTheme from \"./dark\";\nvar defaultMode = Appearance.getColorScheme() || 'light';\nvar ThemeContext = createContext({\n  mode: defaultMode,\n  setMode: function setMode(mode) {\n    return console.log(mode);\n  }\n});\nexport var useTheme = function useTheme() {\n  return React.useContext(ThemeContext);\n};\n\nvar ManageThemeProvider = function ManageThemeProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState(defaultMode),\n      _useState2 = _slicedToArray(_useState, 2),\n      themeState = _useState2[0],\n      setThemeState = _useState2[1];\n\n  var setMode = function setMode(mode) {\n    setThemeState(mode);\n  };\n\n  useEffect(function () {\n    var subscription = Appearance.addChangeListener(function (_ref2) {\n      var colorScheme = _ref2.colorScheme;\n      setThemeState(colorScheme);\n    });\n    return function () {\n      return subscription.remove();\n    };\n  }, []);\n  return React.createElement(ThemeContext.Provider, {\n    value: {\n      mode: themeState,\n      setMode: setMode\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, React.createElement(ThemeProvider, {\n    theme: themeState === 'dark' ? darkTheme.theme : lightTheme.theme,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, children));\n};\n\nvar ThemeManager = function ThemeManager(_ref3) {\n  var children = _ref3.children;\n  return React.createElement(AppearanceProvider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 3\n    }\n  }, React.createElement(ManageThemeProvider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, children));\n};\n\nexport default ThemeManager;","map":{"version":3,"sources":["C:/environnement_travail/env_cours/MyWork/EXPOSE_1_ANGLAIS_TECHNIQUE(APP)/Projet-Anglais/covid-client/src/themes/themeContainer.js"],"names":["React","createContext","useState","useEffect","ThemeProvider","Appearance","AppearanceProvider","lightTheme","darkTheme","defaultMode","getColorScheme","ThemeContext","mode","setMode","console","log","useTheme","useContext","ManageThemeProvider","children","themeState","setThemeState","subscription","addChangeListener","colorScheme","remove","theme","ThemeManager"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,SAAzC,QAA0D,OAA1D;;AAEA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,UAAT,EAAqBC,kBAArB,QAA+C,yBAA/C;AAEA,OAAOC,UAAP;AACA,OAAOC,SAAP;AAEA,IAAMC,WAAW,GAAGJ,UAAU,CAACK,cAAX,MAA+B,OAAnD;AAEA,IAAMC,YAAY,GAAGV,aAAa,CAAC;AACjCW,EAAAA,IAAI,EAAEH,WAD2B;AAEjCI,EAAAA,OAAO,EAAE,iBAAAD,IAAI;AAAA,WAAIE,OAAO,CAACC,GAAR,CAAYH,IAAZ,CAAJ;AAAA;AAFoB,CAAD,CAAlC;AAKA,OAAO,IAAMI,QAAQ,GAAG,SAAXA,QAAW;AAAA,SAAMhB,KAAK,CAACiB,UAAN,CAAiBN,YAAjB,CAAN;AAAA,CAAjB;;AAGP,IAAMO,mBAAmB,GAAG,SAAtBA,mBAAsB,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,kBACRjB,QAAQ,CAACO,WAAD,CADA;AAAA;AAAA,MACrCW,UADqC;AAAA,MACzBC,aADyB;;AAE5C,MAAMR,OAAO,GAAG,SAAVA,OAAU,CAAAD,IAAI,EAAI;AACtBS,IAAAA,aAAa,CAACT,IAAD,CAAb;AACD,GAFD;;AAGAT,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMmB,YAAY,GAAGjB,UAAU,CAACkB,iBAAX,CAA6B,iBAAqB;AAAA,UAAlBC,WAAkB,SAAlBA,WAAkB;AACrEH,MAAAA,aAAa,CAACG,WAAD,CAAb;AACD,KAFoB,CAArB;AAGA,WAAO;AAAA,aAAMF,YAAY,CAACG,MAAb,EAAN;AAAA,KAAP;AACD,GALQ,EAKN,EALM,CAAT;AAMA,SACE,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAAEb,MAAAA,IAAI,EAAEQ,UAAR;AAAoBP,MAAAA,OAAO,EAAPA;AAApB,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AACE,IAAA,KAAK,EAAEO,UAAU,KAAK,MAAf,GAAwBZ,SAAS,CAACkB,KAAlC,GAA0CnB,UAAU,CAACmB,KAD9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEKP,QAFL,CADF,CADF;AAQD,CAnBD;;AAqBA,IAAMQ,YAAY,GAAG,SAAfA,YAAe;AAAA,MAAGR,QAAH,SAAGA,QAAH;AAAA,SACnB,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBA,QAAtB,CADF,CADmB;AAAA,CAArB;;AAMA,eAAeQ,YAAf","sourcesContent":["import React, { createContext, useState, useEffect } from 'react'\r\nimport { StatusBar } from 'react-native'\r\nimport { ThemeProvider } from 'styled-components/native'\r\nimport { Appearance, AppearanceProvider } from 'react-native-appearance'\r\n\r\nimport lightTheme from './light'\r\nimport darkTheme from './dark'\r\n\r\nconst defaultMode = Appearance.getColorScheme() || 'light'\r\n\r\nconst ThemeContext = createContext({\r\n  mode: defaultMode,\r\n  setMode: mode => console.log(mode)\r\n})\r\n\r\nexport const useTheme = () => React.useContext(ThemeContext)\r\n\r\n\r\nconst ManageThemeProvider = ({ children }) => {\r\n  const [themeState, setThemeState] = useState(defaultMode)\r\n  const setMode = mode => {\r\n    setThemeState(mode)\r\n  }\r\n  useEffect(() => {\r\n    const subscription = Appearance.addChangeListener(({ colorScheme }) => {\r\n      setThemeState(colorScheme)\r\n    })\r\n    return () => subscription.remove()\r\n  }, [])\r\n  return (\r\n    <ThemeContext.Provider value={{ mode: themeState, setMode }}>\r\n      <ThemeProvider\r\n        theme={themeState === 'dark' ? darkTheme.theme : lightTheme.theme}>\r\n          {children}\r\n      </ThemeProvider>\r\n    </ThemeContext.Provider>\r\n  )\r\n}\r\n\r\nconst ThemeManager = ({ children }) => (\r\n  <AppearanceProvider>\r\n    <ManageThemeProvider>{children}</ManageThemeProvider>\r\n  </AppearanceProvider>\r\n)\r\n\r\nexport default ThemeManager"]},"metadata":{},"sourceType":"module"}